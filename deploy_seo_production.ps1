# üöÄ DEPLOY SEO COMPLETO PARA PRODU√á√ÉO (PowerShell)
# Script para implementar todas as configura√ß√µes SEO no servidor Windows

Write-Host "üöÄ INICIANDO DEPLOY SEO PARA PRODU√á√ÉO..." -ForegroundColor Blue
Write-Host "==================================================" -ForegroundColor Blue

function Write-Step {
    param($Message)
    Write-Host "[STEP] $Message" -ForegroundColor Cyan
}

function Write-Success {
    param($Message)
    Write-Host "[SUCCESS] $Message" -ForegroundColor Green
}

function Write-Warning {
    param($Message)
    Write-Host "[WARNING] $Message" -ForegroundColor Yellow
}

function Write-Error {
    param($Message)
    Write-Host "[ERROR] $Message" -ForegroundColor Red
}

# Verificar se est√° no diret√≥rio correto
if (-not (Test-Path "manage.py")) {
    Write-Error "Execute este script no diret√≥rio raiz do projeto (onde est√° o manage.py)"
    exit 1
}

# ETAPA 1: BACKEND - Configura√ß√µes Django
Write-Step "1. Configurando Backend Django..."

# 1.1 Verificar se sitemaps.py foi criado
if (-not (Test-Path "backend/core/sitemaps.py")) {
    Write-Error "Arquivo backend/core/sitemaps.py n√£o encontrado!"
    exit 1
}

# 1.2 Aplicar migra√ß√µes
Write-Step "1.1 Aplicando migra√ß√µes Django..."
Set-Location backend
python manage.py makemigrations
python manage.py migrate
Write-Success "Migra√ß√µes aplicadas"

# 1.3 Coletar arquivos est√°ticos
Write-Step "1.2 Coletando arquivos est√°ticos..."
python manage.py collectstatic --noinput
Write-Success "Arquivos est√°ticos coletados"

Set-Location ..

# ETAPA 2: FRONTEND - Build e Deploy
Write-Step "2. Preparando Frontend..."

# 2.1 Instalar depend√™ncias
Write-Step "2.1 Instalando depend√™ncias npm..."
npm install
Write-Success "Depend√™ncias instaladas"

# 2.2 Build do frontend
Write-Step "2.2 Fazendo build do frontend..."
npm run build
Write-Success "Build do frontend conclu√≠do"

# ETAPA 3: Verifica√ß√µes de SEO
Write-Step "3. Executando verifica√ß√µes SEO..."

# 3.1 Verificar robots.txt
Write-Step "3.1 Verificando robots.txt..."
if (Test-Path "public/robots.txt") {
    Write-Host "Conte√∫do do robots.txt:"
    Get-Content "public/robots.txt" | Select-Object -First 10
    Write-Success "robots.txt encontrado"
} else {
    Write-Error "robots.txt n√£o encontrado em public/"
}

# 3.2 Verificar estrutura de sitemaps
Write-Step "3.2 Verificando estrutura de sitemaps..."
if ((Test-Path "backend/core/templates/sitemap_index.xml") -and (Test-Path "backend/core/templates/sitemap.xml")) {
    Write-Success "Templates de sitemap encontrados"
} else {
    Write-Error "Templates de sitemap n√£o encontrados"
}

# 3.3 Verificar configura√ß√£o SEO
Write-Step "3.3 Verificando configura√ß√£o SEO..."
if (Test-Path "src/config/seo.ts") {
    Write-Success "Configura√ß√£o SEO encontrada"
} else {
    Write-Error "Arquivo src/config/seo.ts n√£o encontrado"
}

# ETAPA 4: Comandos para o servidor
Write-Step "4. Gerando comandos para servidor..."

$commands = @"

üìã COMANDOS PARA EXECUTAR NO SERVIDOR DE PRODU√á√ÉO:
=================================================

1Ô∏è‚É£ LINUX/UBUNTU - FAZER PULL DO C√ìDIGO:
   cd /var/www/mozsolidaria
   git pull origin main
   
2Ô∏è‚É£ LINUX - ATUALIZAR BACKEND:
   cd backend
   source venv/bin/activate
   pip install -r requirements.txt
   python manage.py migrate
   python manage.py collectstatic --noinput

3Ô∏è‚É£ LINUX - ATUALIZAR FRONTEND:
   cd /var/www/mozsolidaria
   npm install
   npm run build

4Ô∏è‚É£ LINUX - REINICIAR SERVI√áOS:
   sudo systemctl restart mozsolidaria
   sudo systemctl restart nginx

5Ô∏è‚É£ WINDOWS IIS - COMANDOS:
   # No diret√≥rio do projeto:
   git pull origin main
   pip install -r backend/requirements.txt
   python backend/manage.py migrate
   python backend/manage.py collectstatic --noinput
   npm install
   npm run build
   
   # Reiniciar site no IIS Manager ou:
   iisreset

6Ô∏è‚É£ VERIFICAR SITEMAPS (qualquer OS):
   # Teste manual no navegador:
   https://mozsolidaria.org/sitemap-index.xml
   https://mozsolidaria.org/sitemap-static.xml
   https://mozsolidaria.org/robots.txt

"@

Write-Host $commands -ForegroundColor White

# ETAPA 5: Checklist p√≥s-deploy
$checklist = @"

‚úÖ CHECKLIST P√ìS-DEPLOY SEO:
============================

üîç VERIFICA√á√ïES IMEDIATAS:
‚ñ° Site carregando: https://mozsolidaria.org
‚ñ° Robots.txt: https://mozsolidaria.org/robots.txt
‚ñ° Sitemap index: https://mozsolidaria.org/sitemap-index.xml
‚ñ° Sitemap est√°tico: https://mozsolidaria.org/sitemap-static.xml
‚ñ° Sitemap blog: https://mozsolidaria.org/sitemap-blog.xml
‚ñ° Sitemap programas: https://mozsolidaria.org/sitemap-programas.xml

üìä VERIFICAR META TAGS (F12 no navegador):
‚ñ° <title> √∫nico em cada p√°gina
‚ñ° <meta name="description"> presente
‚ñ° <meta name="keywords"> configurado
‚ñ° Open Graph <meta property="og:..."> 
‚ñ° <link rel="canonical"> correto

üéØ FERRAMENTAS DE TESTE:
‚ñ° Google Search Console (adicionar propriedade)
‚ñ° Bing Webmaster Tools (verificar site)
‚ñ° Google PageSpeed Insights
‚ñ° Lighthouse audit (F12 > Lighthouse)

üì± TESTES MOBILE:
‚ñ° Responsividade (F12 > Device Toggle)
‚ñ° Velocidade mobile no PageSpeed
‚ñ° Core Web Vitals

üöÄ CONFIGURA√á√ïES AVAN√áADAS:
‚ñ° Google Analytics 4
‚ñ° Google Tag Manager
‚ñ° Schema.org markup
‚ñ° Social media meta tags

"@

Write-Host $checklist -ForegroundColor Green

Write-Success "Deploy SEO preparado! Execute os comandos acima no servidor."
Write-Host "==================================================" -ForegroundColor Blue
Write-Host "üéâ SCRIPT CONCLU√çDO COM SUCESSO!" -ForegroundColor Green
Write-Host "üìñ Consulte GUIA_SEO_COMPLETO.md para instru√ß√µes detalhadas" -ForegroundColor Yellow

# Pausa para leitura
Write-Host "`nPressione qualquer tecla para continuar..." -ForegroundColor Cyan
Read-Host "Pressione Enter para finalizar"
