#!/usr/bin/env python3
"""
Teste dos Novos Perfis de Usu√°rio
Verifica se o sistema de promo√ß√£o para perfis espec√≠ficos est√° funcionando
"""

import requests
import json

def test_new_profiles():
    print("üîß Testando sistema de perfis espec√≠ficos...")
    
    # 1. Fazer login
    print("\n1Ô∏è‚É£ Fazendo login...")
    login_response = requests.post(
        'http://localhost:8000/api/v1/auth/token/',
        json={'username': 'admin', 'password': 'admin123'}
    )
    
    if login_response.status_code != 200:
        print("‚ùå Falha no login")
        return
    
    token = login_response.json()['access']
    headers = {'Authorization': f'Bearer {token}'}
    print("‚úÖ Login realizado com sucesso")
    
    # 2. Testar endpoint de perfis dispon√≠veis
    print("\n2Ô∏è‚É£ Testando endpoint de perfis dispon√≠veis...")
    profiles_response = requests.get(
        'http://localhost:8000/api/v1/auth/users/available_profiles/',
        headers=headers
    )
    
    if profiles_response.status_code == 200:
        profiles_data = profiles_response.json()
        print(f"‚úÖ Perfis dispon√≠veis: {profiles_data['total']}")
        for profile in profiles_data['profiles']:
            print(f"   üìå {profile['name']}: {profile['description']}")
    else:
        print(f"‚ùå Erro ao obter perfis: {profiles_response.status_code}")
    
    # 3. Listar usu√°rios e encontrar um para teste
    print("\n3Ô∏è‚É£ Buscando usu√°rio para teste...")
    users_response = requests.get(
        'http://localhost:8000/api/v1/auth/users/',
        headers=headers
    )
    
    if users_response.status_code != 200:
        print("‚ùå Erro ao listar usu√°rios")
        return
    
    users_data = users_response.json()
    test_users = [u for u in users_data['results'] if u['username'] != 'admin' and not u['is_superuser']]
    
    if not test_users:
        print("‚ö†Ô∏è Nenhum usu√°rio dispon√≠vel para teste")
        return
    
    test_user = test_users[0]
    print(f"‚úÖ Usu√°rio selecionado para teste: {test_user['username']}")
    
    # 4. Testar promo√ß√£o para Gestor de Blog
    print(f"\n4Ô∏è‚É£ Promovendo {test_user['username']} para Gestor de Blog...")
    promote_response = requests.post(
        f'http://localhost:8000/api/v1/auth/users/{test_user["id"]}/promote_to_profile/',
        headers=headers,
        json={'profile': 'blog_manager'}
    )
    
    if promote_response.status_code == 200:
        result = promote_response.json()
        print(f"‚úÖ Promo√ß√£o bem-sucedida: {result['message']}")
        print(f"   üìä Novo perfil: {result['profile']}")
    else:
        print(f"‚ùå Erro na promo√ß√£o: {promote_response.status_code}")
        if promote_response.status_code < 500:
            error_data = promote_response.json()
            print(f"   Erro: {error_data}")
    
    # 5. Verificar se a promo√ß√£o funcionou
    print(f"\n5Ô∏è‚É£ Verificando dados atualizados do usu√°rio...")
    user_detail_response = requests.get(
        f'http://localhost:8000/api/v1/auth/users/{test_user["id"]}/',
        headers=headers
    )
    
    if user_detail_response.status_code == 200:
        updated_user = user_detail_response.json()
        print(f"‚úÖ Dados atualizados:")
        print(f"   üë§ Username: {updated_user['username']}")
        print(f"   üõ°Ô∏è Is Staff: {updated_user['is_staff']}")
        print(f"   üëë Is Superuser: {updated_user['is_superuser']}")
        print(f"   üë• Grupos: {updated_user['groups']}")
        print(f"   üîê Permiss√µes: {len(updated_user['permissions'])} permiss√µes")
    else:
        print(f"‚ùå Erro ao verificar usu√°rio: {user_detail_response.status_code}")
    
    # 6. Testar outros perfis
    test_profiles = [
        ('project_manager', 'Gestor de Projetos'),
        ('community_manager', 'Gestor de Comunidade'),
        ('viewer', 'Visualizador')
    ]
    
    print(f"\n6Ô∏è‚É£ Testando outros perfis...")
    for profile_code, profile_name in test_profiles:
        print(f"   üîÑ Testando {profile_name}...")
        test_promote_response = requests.post(
            f'http://localhost:8000/api/v1/auth/users/{test_user["id"]}/promote_to_profile/',
            headers=headers,
            json={'profile': profile_code}
        )
        
        if test_promote_response.status_code == 200:
            print(f"   ‚úÖ {profile_name} - OK")
        else:
            print(f"   ‚ùå {profile_name} - Erro {test_promote_response.status_code}")
    
    print(f"\n‚úÖ Teste conclu√≠do!")
    print("\nüîó URLs para testar no frontend:")
    print("   ‚Ä¢ Dashboard: http://localhost:8080/dashboard/users")
    print("   ‚Ä¢ Login: http://localhost:8080/login")

if __name__ == "__main__":
    test_new_profiles()
