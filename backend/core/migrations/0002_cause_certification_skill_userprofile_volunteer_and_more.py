# Generated by Django 4.2.7 on 2025-08-03 20:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='Ícone')),
                ('color', models.CharField(default='primary', max_length=20, verbose_name='Cor')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativa')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criada em')),
            ],
            options={
                'verbose_name': 'Causa',
                'verbose_name_plural': 'Causas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Nome')),
                ('issuer', models.CharField(max_length=100, verbose_name='Emissor')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('validity_period', models.PositiveIntegerField(blank=True, null=True, verbose_name='Validade (meses)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativa')),
            ],
            options={
                'verbose_name': 'Certificação',
                'verbose_name_plural': 'Certificações',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome')),
                ('category', models.CharField(blank=True, max_length=50, verbose_name='Categoria')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativa')),
            ],
            options={
                'verbose_name': 'Habilidade',
                'verbose_name_plural': 'Habilidades',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('donor', 'Doador'), ('beneficiary', 'Beneficiário'), ('volunteer', 'Voluntário'), ('partner', 'Parceiro'), ('admin', 'Administrador')], max_length=20, verbose_name='Tipo de Usuário')),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Formato: +258XXXXXXXXX', regex='^\\+?258\\d{9}$')], verbose_name='Telefone')),
                ('address', models.TextField(blank=True, verbose_name='Endereço')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/', verbose_name='Foto de Perfil')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verificado')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='Última Atividade')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil de Usuário',
                'verbose_name_plural': 'Perfis de Usuário',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.JSONField(default=dict, verbose_name='Disponibilidade')),
                ('availability_type', models.CharField(choices=[('weekdays', 'Dias de Semana'), ('weekends', 'Fins de Semana'), ('evenings', 'Noites'), ('flexible', 'Flexível')], default='flexible', max_length=20, verbose_name='Tipo de Disponibilidade')),
                ('max_hours_per_week', models.PositiveIntegerField(blank=True, null=True, verbose_name='Máximo de Horas por Semana')),
                ('total_hours', models.PositiveIntegerField(default=0, verbose_name='Total de Horas')),
                ('projects_completed', models.PositiveIntegerField(default=0, verbose_name='Projetos Concluídos')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Avaliação')),
                ('transportation_available', models.BooleanField(default=False, verbose_name='Transporte Disponível')),
                ('remote_work_available', models.BooleanField(default=True, verbose_name='Trabalho Remoto')),
            ],
            options={
                'verbose_name': 'Voluntário',
                'verbose_name_plural': 'Voluntários',
                'ordering': ['-total_hours'],
            },
        ),
        migrations.CreateModel(
            name='VolunteerCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obtained_date', models.DateField(verbose_name='Data de Obtenção')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Data de Expiração')),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='volunteers/certificates/', verbose_name='Arquivo do Certificado')),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.certification', verbose_name='Certificação')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.volunteer', verbose_name='Voluntário')),
            ],
            options={
                'verbose_name': 'Certificação de Voluntário',
                'verbose_name_plural': 'Certificações de Voluntários',
                'unique_together': {('volunteer', 'certification')},
            },
        ),
        migrations.AddField(
            model_name='volunteer',
            name='certifications',
            field=models.ManyToManyField(blank=True, through='core.VolunteerCertification', to='core.certification', verbose_name='Certificações'),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='preferred_causes',
            field=models.ManyToManyField(blank=True, to='core.cause', verbose_name='Causas Preferidas'),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='skills',
            field=models.ManyToManyField(blank=True, to='core.skill', verbose_name='Habilidades'),
        ),
        migrations.AddField(
            model_name='volunteer',
            name='user_profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile', verbose_name='Perfil'),
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=200, verbose_name='Nome da Organização')),
                ('organization_type', models.CharField(choices=[('ngo', 'ONG'), ('company', 'Empresa'), ('government', 'Governo'), ('international', 'Organização Internacional'), ('religious', 'Organização Religiosa'), ('academic', 'Instituição Acadêmica')], max_length=20, verbose_name='Tipo de Organização')),
                ('partnership_level', models.CharField(choices=[('strategic', 'Estratégico'), ('operational', 'Operacional'), ('financial', 'Financeiro'), ('technical', 'Técnico')], max_length=20, verbose_name='Nível de Parceria')),
                ('tax_id', models.CharField(blank=True, max_length=50, verbose_name='NUIT')),
                ('website', models.URLField(blank=True, verbose_name='Site')),
                ('established_date', models.DateField(blank=True, null=True, verbose_name='Data de Fundação')),
                ('contact_person', models.CharField(max_length=100, verbose_name='Pessoa de Contato')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Email de Contato')),
                ('contact_phone', models.CharField(max_length=20, verbose_name='Telefone de Contato')),
                ('resources_available', models.JSONField(default=dict, verbose_name='Recursos Disponíveis')),
                ('partnership_start_date', models.DateField(blank=True, null=True, verbose_name='Início da Parceria')),
                ('partnership_agreement', models.FileField(blank=True, null=True, upload_to='partners/agreements/', verbose_name='Acordo de Parceria')),
                ('areas_of_expertise', models.ManyToManyField(blank=True, to='core.cause', verbose_name='Áreas de Especialização')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile', verbose_name='Perfil')),
            ],
            options={
                'verbose_name': 'Parceiro',
                'verbose_name_plural': 'Parceiros',
                'ordering': ['organization_name'],
            },
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_donated', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Total Doado')),
                ('first_donation_date', models.DateTimeField(blank=True, null=True, verbose_name='Primeira Doação')),
                ('last_donation_date', models.DateTimeField(blank=True, null=True, verbose_name='Última Doação')),
                ('preferred_frequency', models.CharField(choices=[('one_time', 'Única'), ('monthly', 'Mensal'), ('quarterly', 'Trimestral'), ('annual', 'Anual')], default='one_time', max_length=20, verbose_name='Frequência Preferida')),
                ('communication_preferences', models.JSONField(default=dict, verbose_name='Preferências de Comunicação')),
                ('receive_updates', models.BooleanField(default=True, verbose_name='Receber Atualizações')),
                ('receive_receipts', models.BooleanField(default=True, verbose_name='Receber Recibos')),
                ('anonymous_donations', models.BooleanField(default=False, verbose_name='Doações Anônimas')),
                ('public_recognition', models.BooleanField(default=True, verbose_name='Reconhecimento Público')),
                ('preferred_causes', models.ManyToManyField(blank=True, to='core.cause', verbose_name='Causas Preferidas')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile', verbose_name='Perfil')),
            ],
            options={
                'verbose_name': 'Doador',
                'verbose_name_plural': 'Doadores',
                'ordering': ['-total_donated'],
            },
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('family_size', models.PositiveIntegerField(verbose_name='Tamanho da Família')),
                ('children_count', models.PositiveIntegerField(default=0, verbose_name='Número de Filhos')),
                ('family_status', models.CharField(choices=[('single', 'Solteiro(a)'), ('married', 'Casado(a)'), ('divorced', 'Divorciado(a)'), ('widowed', 'Viúvo(a)')], max_length=20, verbose_name='Estado Civil')),
                ('community', models.CharField(max_length=100, verbose_name='Comunidade')),
                ('district', models.CharField(max_length=100, verbose_name='Distrito')),
                ('province', models.CharField(default='Cabo Delgado', max_length=100, verbose_name='Província')),
                ('needs_assessment', models.JSONField(default=dict, verbose_name='Avaliação de Necessidades')),
                ('verification_status', models.CharField(choices=[('pending', 'Pendente'), ('verified', 'Verificado'), ('rejected', 'Rejeitado'), ('review', 'Em Revisão')], default='pending', max_length=20, verbose_name='Status de Verificação')),
                ('verification_date', models.DateTimeField(blank=True, null=True, verbose_name='Data de Verificação')),
                ('identity_document', models.FileField(blank=True, null=True, upload_to='beneficiaries/documents/', verbose_name='Documento de Identidade')),
                ('proof_of_residence', models.FileField(blank=True, null=True, upload_to='beneficiaries/documents/', verbose_name='Comprovante de Residência')),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.userprofile', verbose_name='Perfil')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_beneficiaries', to=settings.AUTH_USER_MODEL, verbose_name='Verificado por')),
            ],
            options={
                'verbose_name': 'Beneficiário',
                'verbose_name_plural': 'Beneficiários',
                'ordering': ['community', 'user_profile__user__first_name'],
            },
        ),
    ]
