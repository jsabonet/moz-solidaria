#!/bin/bash

# =================================================================
# SCRIPT PARA CORRIGIR CONFIGURA√á√ÉO DO POSTGRESQL NO DIGITALOCEAN
# =================================================================

echo "üîß Configurando PostgreSQL para MOZ SOLID√ÅRIA..."

# 1. Parar o PostgreSQL para reconfigura√ß√£o
echo "üì¶ Parando PostgreSQL..."
sudo systemctl stop postgresql

# 2. Verificar e corrigir usu√°rios no PostgreSQL
echo "üë§ Configurando usu√°rios do PostgreSQL..."
sudo -u postgres psql <<EOF
-- Remover usu√°rio antigo se existir
DROP USER IF EXISTS joellasmim;

-- Verificar se usu√°rio adamoabdala existe, se n√£o criar
DO \$\$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'adamoabdala') THEN
        CREATE USER adamoabdala WITH PASSWORD 'Jeison2@@';
    END IF;
END
\$\$;

-- Alterar senha do usu√°rio (caso j√° exista)
ALTER USER adamoabdala WITH PASSWORD 'Jeison2@@';

-- Verificar se banco existe, se n√£o criar
SELECT 'CREATE DATABASE moz_solidaria_db OWNER adamoabdala'
WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'moz_solidaria_db')\gexec

-- Conceder todos os privil√©gios
GRANT ALL PRIVILEGES ON DATABASE moz_solidaria_db TO adamoabdala;

-- Conceder privil√©gios para criar databases (para testes)
ALTER USER adamoabdala CREATEDB;

-- Listar usu√°rios para verifica√ß√£o
\du

-- Sair
\q
EOF

# 3. Reiniciar PostgreSQL
echo "üîÑ Reiniciando PostgreSQL..."
sudo systemctl start postgresql
sudo systemctl enable postgresql

# 4. Verificar status
echo "‚úÖ Verificando status do PostgreSQL..."
sudo systemctl status postgresql --no-pager -l

# 5. Testar conex√£o
echo "üß™ Testando conex√£o com banco..."
PGPASSWORD='Jeison2@@' psql -h localhost -U adamoabdala -d moz_solidaria_db -c "SELECT version();" || echo "‚ùå Erro na conex√£o"

# 6. Configurar vari√°veis de ambiente
echo "üìù Configurando vari√°veis de ambiente..."
cd /home/ubuntu/moz-solidaria/backend

# Criar arquivo .env se n√£o existir
if [ ! -f ".env" ]; then
    cat > .env << 'EOL'
# DigitalOcean Production Environment
DEBUG=False
SECRET_KEY=moz-solidaria-super-secret-key-production-2024-change-this
ALLOWED_HOSTS=167.99.93.20,localhost,127.0.0.1

# Database Configuration
DATABASE_URL=postgresql://adamoabdala:Jeison2@@localhost:5432/moz_solidaria_db
DB_NAME=moz_solidaria_db
DB_USER=adamoabdala
DB_PASSWORD=Jeison2@@
DB_HOST=localhost
DB_PORT=5432

# Static and Media
STATIC_ROOT=/home/ubuntu/moz-solidaria/static/
MEDIA_ROOT=/home/ubuntu/moz-solidaria/media/

# Logging
LOG_LEVEL=INFO
EOL
    echo "‚úÖ Arquivo .env criado"
else
    echo "‚ÑπÔ∏è  Arquivo .env j√° existe"
fi

# 7. Ativar virtual environment e testar Django
echo "üêç Testando Django com as novas configura√ß√µes..."
source venv/bin/activate

# Verificar se consegue conectar no banco
python manage.py check --database default

if [ $? -eq 0 ]; then
    echo "‚úÖ Django consegue conectar no banco!"
    
    # Fazer migra√ß√µes
    echo "üìä Executando migra√ß√µes..."
    python manage.py migrate
    
    # Coletar arquivos est√°ticos
    echo "üìÅ Coletando arquivos est√°ticos..."
    python manage.py collectstatic --noinput
    
    echo "üéâ Configura√ß√£o do PostgreSQL conclu√≠da com sucesso!"
    echo ""
    echo "üîß Pr√≥ximos passos:"
    echo "1. Criar superusu√°rio: python manage.py createsuperuser"
    echo "2. Iniciar servidor: gunicorn --bind 0.0.0.0:8000 moz_solidaria_api.wsgi"
    echo "3. Configurar Nginx para servir a aplica√ß√£o"
    
else
    echo "‚ùå Erro: Django n√£o consegue conectar no banco"
    echo "Verifique as configura√ß√µes e tente novamente"
fi

echo "üìã Informa√ß√µes do banco:"
echo "Host: localhost"
echo "Port: 5432"
echo "Database: moz_solidaria_db"
echo "User: adamoabdala"
echo "Password: Jeison2@@"
