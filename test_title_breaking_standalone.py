#!/usr/bin/env python3
"""
Test independente para demonstrar quebra de t√≠tulos longos
"""

def _break_long_title(title):
    """Quebrar t√≠tulos longos para evitar sobreposi√ß√£o no PDF"""
    # Limite conservador para t√≠tulos (considerando fonte grande)
    max_title_length = 45  # Caracteres por linha para t√≠tulos
    
    if len(title) <= max_title_length:
        return title
    
    # === QUEBRA INTELIGENTE POR PALAVRAS ===
    words = title.split()
    lines = []
    current_line = ""
    
    for word in words:
        # Testar se adicionar a palavra ultrapassaria o limite
        test_line = f"{current_line} {word}".strip()
        
        if len(test_line) <= max_title_length:
            current_line = test_line
        else:
            # Se a linha atual n√£o est√° vazia, finaliz√°-la
            if current_line:
                lines.append(current_line)
                current_line = word
            else:
                # Palavra muito longa sozinha - for√ßar quebra
                if len(word) > max_title_length:
                    lines.append(word[:max_title_length-3] + "...")
                    current_line = ""
                else:
                    current_line = word
    
    # Adicionar √∫ltima linha se houver
    if current_line:
        lines.append(current_line)
    
    # === LIMITAR A 2 LINHAS PARA T√çTULOS ===
    if len(lines) > 2:
        # Combinar √∫ltimas linhas se necess√°rio
        first_line = lines[0]
        remaining_text = " ".join(lines[1:])
        
        # Se o restante ainda √© muito longo, cort√°-lo
        if len(remaining_text) > max_title_length:
            second_line = remaining_text[:max_title_length-3] + "..."
        else:
            second_line = remaining_text
        
        lines = [first_line, second_line]
    
    return "<br/>".join(lines)

def _format_title(filename):
    """Formatar t√≠tulo em portugu√™s baseado no tipo de relat√≥rio com quebra inteligente"""
    area_names = {
        'projects': {
            'title': 'PORTF√ìLIO DE PROJETOS SOCIAIS',
            'subtitle': 'An√°lise de Iniciativas de Impacto Social'
        },
        'donations': {
            'title': 'RELAT√ìRIO DE CONTRIBUI√á√ïES FINANCEIRAS',
            'subtitle': 'Vis√£o Geral dos Investimentos Filantr√≥picos'
        },
        'volunteers': {
            'title': 'RELAT√ìRIO DE VOLUNT√ÅRIOS',
            'subtitle': 'An√°lise de Gest√£o de Recursos Humanos Volunt√°rios'
        },
        'beneficiaries': {
            'title': 'AVALIA√á√ÉO DE IMPACTO COMUNIT√ÅRIO',
            'subtitle': 'Resultados e Demografia dos Benefici√°rios'
        }
    }
    
    # Identificar o tipo baseado no filename
    title = None
    for key, content in area_names.items():
        if key in filename.lower():
            title = content['title']
            break
    
    # Fallback para t√≠tulo gen√©rico
    if not title:
        clean_filename = filename.replace('_', ' ').title()
        title = f"RELAT√ìRIO EXECUTIVO: {clean_filename.upper()}"
    
    # === QUEBRA INTELIGENTE DE T√çTULOS LONGOS ===
    return _break_long_title(title)

def test_title_breaking():
    """Testar quebra de t√≠tulos longos"""
    
    print("üîß TESTING TITLE BREAKING FUNCTIONALITY")
    print("=" * 60)
    
    # T√≠tulos de teste - alguns muito longos
    test_titles = [
        "donations_report_2024",
        "volunteers_comprehensive_analysis_detailed_report",
        "projects_strategic_portfolio_extensive_analysis_2024",
        "beneficiaries_impact_assessment_community_outreach_program_results",
        "super_long_filename_that_would_normally_break_the_pdf_layout_completely"
    ]
    
    print("üìã TESTING TITLE FORMATTING:")
    print("-" * 40)
    
    for i, filename in enumerate(test_titles, 1):
        print(f"\n{i}. Original: {filename}")
        
        # Testar formata√ß√£o do t√≠tulo
        formatted_title = _format_title(filename)
        print(f"   Formatted: {formatted_title}")
        
        # Mostrar se houve quebra
        if "<br/>" in formatted_title:
            lines = formatted_title.split("<br/>")
            print(f"   üìè Quebrado em {len(lines)} linhas:")
            for j, line in enumerate(lines, 1):
                print(f"      Linha {j}: '{line}' ({len(line)} chars)")
        else:
            print(f"   üìè Linha √∫nica: '{formatted_title}' ({len(formatted_title)} chars)")
    
    print("\n" + "=" * 60)
    print("‚úÖ TITLE BREAKING TEST COMPLETED")
    print("üéØ T√≠tulos longos agora s√£o quebrados inteligentemente!")

if __name__ == "__main__":
    test_title_breaking()
